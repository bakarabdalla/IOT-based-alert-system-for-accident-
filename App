#include <SPI.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>
#include <WiFiManager.h> 
#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <HTTPClient.h>
#include <SoftwareSerial.h>
#include <ESP32Servo.h>
#include <TinyGPS++.h>

TinyGPSPlus gps;

#define SIM800_TX_PIN 2  //GSM Module TX is connected to Arduino D8
#define SIM800_RX_PIN 4  //GSM Module RX is connected to Arduino D9

SoftwareSerial SIM900A(SIM800_TX_PIN, SIM800_RX_PIN);

LiquidCrystal_I2C lcd(0x27, 16, 2);

const String  phone_no = "+252616148163";

String Accident = "http://192.168.1.10/Accident/piezo.php";
String Flame = "http://192.168.1.10/Accident/fire.php";
//http://192.168.1.10/Accident/home.php

unsigned long previousMillis = 0;
const long interval = 5000;

String send_location = "";
String Send_Accident = "";
String Send_Flame = "";

#define Flame_PIN 27
#define PiezoPin 36
#define BUZZER_PIN 25

int FlameValue = 0;
int PiezoValue = 0;

#define TRIGGER_PIN 0

bool wm_nonblocking = false;

String postData = ""; 
String payload = ""; 

int httpCode;

HTTPClient http;

WiFiManager wm;

void wmanager() {
  wm.setConfigPortalTimeout(60);

  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("Waiting Internet");
  delay(2000);
     
   bool res;

   res = wm.autoConnect("Car_Accident"); 

    if(!res) {
        Serial.println("Failed to connect");

  time_t now = time(nullptr);
  while (now < 24 * 3600)
  {
    Serial.print(".");
  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("NO Internet");
 // delay(2000);
 
  
    delay(100);
    now = time(nullptr);
  }
      
    } 
    else {
 Serial.println("Succesfully connected)");      
    }
   }
 
void setup() 
{
   WiFi.mode(WIFI_STA);
  Serial.begin(9600); 
  SIM900A.begin(9600);

  pinMode(TRIGGER_PIN, INPUT);
  pinMode(Flame_PIN, INPUT);
  pinMode(PiezoPin, INPUT);
  
  lcd.begin();
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("Car Accident");
  lcd.setCursor(0,1);
  lcd.print("System");
  delay(5000);
  lcd.clear();
  
  lcd.setCursor(0,1);
  lcd.print("Starting.....");
  delay(3000);
  lcd.clear(); 


wmanager();
}

void checkButton(){
  // check for button press
  if(digitalRead(TRIGGER_PIN) == LOW) {
       delay(50);
    if(digitalRead(TRIGGER_PIN) == LOW){
      Serial.println("Button Pressed");
      // still holding button for 3000 ms, reset settings, code not ideaa for production
      delay(3000); // reset delay hold
      if(digitalRead(TRIGGER_PIN) == LOW){
        Serial.println("Button Held");
        Serial.println("Erasing Config, restarting");
        wm.resetSettings();
        ESP.restart();
      }

      // start portal w delay
      Serial.println("Starting config portal");
      wm.setConfigPortalTimeout(150);
      
      if (!wm.startConfigPortal("OnDemandAP","password")) {
        Serial.println("failed to connect or hit timeout");
        delay(3000);
        // ESP.restart();
      } else {
        //if you get here you have connected to the WiFi
        Serial.println("connected...yeey :)");
      }
    }
  }
}

void loop() {
checkButton();  
fire();
//sendLocation();
}

void fire() 
{
 FlameValue = digitalRead(Flame_PIN);
 PiezoValue = analogRead(A0);
 //double volt = PiezoValue*(5.0/1023.0);
 //Serial.println(PiezoValue);
 
  if (FlameValue == LOW)
  {
  Send_Flame = "Fire!";  
  digitalWrite(BUZZER_PIN, HIGH);
  lcd.setCursor(0, 0);
  lcd.print("Fire! Fire! Fire");
  lcd.setCursor(0, 1);
  lcd.print("Sending Message");
  Reply("Fire"); //Flame detected
  delay(100);
  sendLocation();  // location
  delay(100);
  FIRE_OUT();
  delay(5000);
  lcd.clear();                        
  }

else if (PiezoValue > 55)
  {
  Send_Accident = "Accident";  
  digitalWrite(BUZZER_PIN, HIGH);
  lcd.setCursor(0, 0);
  lcd.print("Accident!");
  lcd.setCursor(0, 1);
  lcd.print("Sending Message");
  Reply("Accident"); //Flame detected
  delay(100);
  sendLocation();  // location
  delay(100);
  PIEZO_OUT();
  delay(5000);
  lcd.clear();    
  }
  
  else
  {
    rfid();     
  }
}

void rfid() 
{
  lcd.setCursor(0,0);
  lcd.print("No Fire");
  lcd.setCursor(0,1);
  lcd.print("No Accident");
  digitalWrite(BUZZER_PIN, LOW);
  delay(2000);
  
}

void sendLocation()
{
  // Can take up to 60 seconds
  boolean newData = false;
  for (unsigned long start = millis(); millis() - start < 2000;)
  {
     while (Serial.available() > 0)
    {
      if (gps.encode(Serial.read()))
      {
        newData = true;
      }
    }
  }
  if (newData)      //If newData is true
  {
    Serial.print("Latitude= "); 
    Serial.print(gps.location.lat(), 6);
    Serial.print(" Longitude= "); 
    Serial.println(gps.location.lng(), 6);
    
    send_location = "http://maps.google.com/maps?q=loc:" + String(gps.location.lat(), 6) + "," + String(gps.location.lng(), 6) ; 
      
    newData = false;
    //delay(300);
    ///*
    if(gps.location.lng(), 6 > 0)
    {
    SIM900A.print("AT+CMGF=1\r");
    delay(1000);
    SIM900A.print("AT+CMGS=\""+ phone_no+ "\"\r"); // Receiver’s Mobile Number
    delay(1000);
    SIM900A.print("http://maps.google.com/maps?q=loc:");
    SIM900A.print(gps.location.lat(), 6);
    SIM900A.print(",");
    SIM900A.print(gps.location.lng(), 6);
    //SIM900A.print("I feel pain");
    delay(100);
    SIM900A.println((char)26);
    delay(1000);
    Serial.println("GPS Location SMS Sent Successfully.");
    }
    //*/
  }
}

void FIRE_OUT(){
         unsigned long currentMillis = millis(); //read current time

  if (currentMillis - previousMillis >= interval) { //if current time - last time > 5 sec
    previousMillis = currentMillis;
 
    postData += "&Flame=" + Send_Flame;
    postData += "&Location=" + send_location;
    
    payload = "";
  
    Serial.println();
    Serial.println("---------------RECORD.php");  
   
    http.begin(Flame);  
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");  
   
    httpCode = http.POST(postData); //--> Send the request
    payload = http.getString();  //--> Get the response payload
  
    Serial.print("httpCode : ");
    Serial.println(httpCode); //--> Print HTTP return code
    Serial.print("payload  : ");
    Serial.println(payload);  //--> Print request response payload
    
    http.end();  //Close connection
    Serial.println("---------------");
  }
}

void PIEZO_OUT(){
        unsigned long currentMillis = millis(); //read current time

  if (currentMillis - previousMillis >= interval) { //if current time - last time > 5 sec
    previousMillis = currentMillis;
 
    postData += "&Piezo=" + Send_Accident;
    postData += "&Location=" + send_location;
    
    payload = "";
  
    Serial.println();
    Serial.println("---------------RECORD.php");  
   
    http.begin(Accident);  
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");  
   
    httpCode = http.POST(postData); //--> Send the request
    payload = http.getString();  //--> Get the response payload
  
    Serial.print("httpCode : ");
    Serial.println(httpCode); //--> Print HTTP return code
    Serial.print("payload  : ");
    Serial.println(payload);  //--> Print request response payload
    
    http.end();  //Close connection
    Serial.println("---------------");
  }
}

  void Reply(String msg)
{
Serial.println ("Sending Message please wait….");
SIM900A.println("AT+CMGF=1"); //Text Mode initialisation
delay(1000);
Serial.println ("Set SMS Number");
SIM900A.println("AT+CMGS=\""+ phone_no+ "\"\r"); // Receiver’s Mobile Number
Serial.println (phone_no);
delay(1000);
Serial.println ("Set SMS Content");
SIM900A.println(msg);// Messsage content
Serial.println(msg);
delay(100);
Serial.println ("Done");
SIM900A.println((char)26);
delay(1000);
Serial.println ("Message sent succesfully");
}
